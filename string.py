str = 'test test test test'
# length — это длина строки [обязательный параметр]
# fillchar—это символ, задающий выравнивание [на выбор]
str.center(length, fillchar), где:

# Метод count() возвращает счёт или число появлений в строке конкретного значения.
str.count(value, start, end), где:
# value — это подстрока, которая должна быть найдена в строке [обязательный параметр]
# start — это начальное значение индекса в строке, где начинается поиск заданного значения [на выбор]
# end — это конечное значение индекса в строке, где завершается поиск заданного значения [на выбор]

# Метод find() возвращает наименьшее значение индекса конкретной подстроки в строке. Если подстрока не найдена, возвращается -1.
str.find(value, start, end), где:
# value или подстрока, которая должна быть найдена в строке [обязательный параметр]
# start — это начальное значение индекса в строке, где начинается поиск заданного значения [на выбор]
# end — это конечное значение индекса в строке, где завершается поиск заданного значения [на выбор]
# rfind(): метод rfind() такой же, как find(), за исключением того, что он возвращает наибольшее значение индекса подстроки.
print(str.rfind('test')) # 15

# Метод swapcase() возвращает копию строки, преобразуя все заглавные буквы в строчные, и наоборот.
str.swapcase()

# Метод startswith() возвращает True, если строка начинается с заданного значения. В противном случае возвращает False.
# С другой стороны, функция endswith() возвращает True, если строка заканчивается заданным значением. В противном случае возвращает False.
str.startswith(value, start, end)
str.endswith(value, start, end)
# value — это искомая строка в строке [обязательный параметр]
# start — это начальное значение индекса в строке, где начинается поиск заданного значения [на выбор]
# end — это конечное значение индекса в строке, где завершается поиск заданного значения [на выбор]

# Метод split() возвращает список слов в строке, где разделителем по умолчанию является пробел.
str.split(sep, maxsplit)
# sep: разделитель, используемый для разделения строки. Если не указано иное, разделителем по умолчанию является пробел [на выбор]
# maxsplit: обозначает количество разделений. Значение по умолчанию -1, что значит «все случаи» [на выбор]
rsplit(): # разделяет строку справа.

# Метод capitalize() меняет на заглавную букву только первый символ строки.
str.capitalize()
# Метод upper() делает заглавными все буквы в строке.
str.upper()
# Метод title() делает заглавными все первые буквы выбранной строки.
str.title()

# С помощью заданного символа (по умолчанию пробел) метод ljust() возвращает вариант выбранной строки с левым выравниванием. Метод rjust() выравнивает строку вправо.
str.rjust(length, character)
# length: длина строки, которая должна быть возвращена [обязательный параметр]
# character: символ для заполнения незанятого пространства, по умолчанию являющийся пробелом [на выбор]
string = 'test'

# Метод strip() возвращает копию строки без первых и последних символов. Эти отсутствующие символы — по умолчанию пробелы.
string.strip(character)
# character: набор символов для удаления [на выбор]
# rstrip(): удаляет символы с начала строки.
# lstrip(): удаляет символы с конца строки.


